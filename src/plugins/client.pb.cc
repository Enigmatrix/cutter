// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
struct MessageOneofInstance {
  const ::CommentAdded* commentadded_;
  const ::CommentDeleted* commentdeleted_;
}* Message_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CommentAdded_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommentAdded_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommentDeleted_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommentDeleted_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_client_2eproto() {
  protobuf_AddDesc_client_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, username_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_default_oneof_instance_, commentadded_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_default_oneof_instance_, commentdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, body_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      -1,
      -1,
      -1,
      Message_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _oneof_case_[0]),
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _is_default_instance_));
  CommentAdded_descriptor_ = file->message_type(1);
  static const int CommentAdded_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, cmt_),
  };
  CommentAdded_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommentAdded_descriptor_,
      CommentAdded::default_instance_,
      CommentAdded_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommentAdded),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, _is_default_instance_));
  CommentDeleted_descriptor_ = file->message_type(2);
  static const int CommentDeleted_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentDeleted, addr_),
  };
  CommentDeleted_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommentDeleted_descriptor_,
      CommentDeleted::default_instance_,
      CommentDeleted_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommentDeleted),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentDeleted, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentDeleted, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, &Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommentAdded_descriptor_, &CommentAdded::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommentDeleted_descriptor_, &CommentDeleted::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client_2eproto() {
  delete Message::default_instance_;
  delete Message_default_oneof_instance_;
  delete Message_reflection_;
  delete CommentAdded::default_instance_;
  delete CommentAdded_reflection_;
  delete CommentDeleted::default_instance_;
  delete CommentDeleted_reflection_;
}

void protobuf_AddDesc_client_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_client_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014client.proto\"u\n\007Message\022\020\n\010username\030\002 "
    "\001(\t\022%\n\014commentAdded\030\010 \001(\0132\r.CommentAdded"
    "H\000\022)\n\016commentDeleted\030\t \001(\0132\017.CommentDele"
    "tedH\000B\006\n\004body\")\n\014CommentAdded\022\014\n\004addr\030\001 "
    "\001(\004\022\013\n\003cmt\030\002 \001(\t\"\036\n\016CommentDeleted\022\014\n\004ad"
    "dr\030\001 \001(\004b\006proto3", 216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client.proto", &protobuf_RegisterTypes);
  Message::default_instance_ = new Message();
  Message_default_oneof_instance_ = new MessageOneofInstance();
  CommentAdded::default_instance_ = new CommentAdded();
  CommentDeleted::default_instance_ = new CommentDeleted();
  Message::default_instance_->InitAsDefaultInstance();
  CommentAdded::default_instance_->InitAsDefaultInstance();
  CommentDeleted::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_2eproto {
  StaticDescriptorInitializer_client_2eproto() {
    protobuf_AddDesc_client_2eproto();
  }
} static_descriptor_initializer_client_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kUsernameFieldNumber;
const int Message::kCommentAddedFieldNumber;
const int Message::kCommentDeletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message)
}

void Message::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Message_default_oneof_instance_->commentadded_ = const_cast< ::CommentAdded*>(&::CommentAdded::default_instance());
  Message_default_oneof_instance_->commentdeleted_ = const_cast< ::CommentDeleted*>(&::CommentDeleted::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message)
}

void Message::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Message)
  SharedDtor();
}

void Message::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_body()) {
    clear_body();
  }
  if (this != default_instance_) {
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:Message)
  switch(body_case()) {
    case kCommentAdded: {
      delete body_.commentadded_;
      break;
    }
    case kCommentDeleted: {
      delete body_.commentdeleted_;
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Message)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_body();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Message.username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_commentAdded;
        break;
      }

      // optional .CommentAdded commentAdded = 8;
      case 8: {
        if (tag == 66) {
         parse_commentAdded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commentadded()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_commentDeleted;
        break;
      }

      // optional .CommentDeleted commentDeleted = 9;
      case 9: {
        if (tag == 74) {
         parse_commentDeleted:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commentdeleted()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message)
  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional .CommentAdded commentAdded = 8;
  if (has_commentadded()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *body_.commentadded_, output);
  }

  // optional .CommentDeleted commentDeleted = 9;
  if (has_commentdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *body_.commentdeleted_, output);
  }

  // @@protoc_insertion_point(serialize_end:Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message)
  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Message.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional .CommentAdded commentAdded = 8;
  if (has_commentadded()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *body_.commentadded_, false, target);
  }

  // optional .CommentDeleted commentDeleted = 9;
  if (has_commentdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *body_.commentdeleted_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message)
  return target;
}

int Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Message)
  int total_size = 0;

  // optional string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  switch (body_case()) {
    // optional .CommentAdded commentAdded = 8;
    case kCommentAdded: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *body_.commentadded_);
      break;
    }
    // optional .CommentDeleted commentDeleted = 9;
    case kCommentDeleted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *body_.commentdeleted_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.body_case()) {
    case kCommentAdded: {
      mutable_commentadded()->::CommentAdded::MergeFrom(from.commentadded());
      break;
    }
    case kCommentDeleted: {
      mutable_commentdeleted()->::CommentDeleted::MergeFrom(from.commentdeleted());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  username_.Swap(&other->username_);
  std::swap(body_, other->body_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// optional string username = 2;
void Message::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Message::username() const {
  // @@protoc_insertion_point(field_get:Message.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Message::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.username)
}
 void Message::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.username)
}
 void Message::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.username)
}
 ::std::string* Message::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Message.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Message::release_username() {
  // @@protoc_insertion_point(field_release:Message.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Message::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Message.username)
}

// optional .CommentAdded commentAdded = 8;
bool Message::has_commentadded() const {
  return body_case() == kCommentAdded;
}
void Message::set_has_commentadded() {
  _oneof_case_[0] = kCommentAdded;
}
void Message::clear_commentadded() {
  if (has_commentadded()) {
    delete body_.commentadded_;
    clear_has_body();
  }
}
 const ::CommentAdded& Message::commentadded() const {
  // @@protoc_insertion_point(field_get:Message.commentAdded)
  return has_commentadded()
      ? *body_.commentadded_
      : ::CommentAdded::default_instance();
}
::CommentAdded* Message::mutable_commentadded() {
  if (!has_commentadded()) {
    clear_body();
    set_has_commentadded();
    body_.commentadded_ = new ::CommentAdded;
  }
  // @@protoc_insertion_point(field_mutable:Message.commentAdded)
  return body_.commentadded_;
}
::CommentAdded* Message::release_commentadded() {
  // @@protoc_insertion_point(field_release:Message.commentAdded)
  if (has_commentadded()) {
    clear_has_body();
    ::CommentAdded* temp = body_.commentadded_;
    body_.commentadded_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_commentadded(::CommentAdded* commentadded) {
  clear_body();
  if (commentadded) {
    set_has_commentadded();
    body_.commentadded_ = commentadded;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.commentAdded)
}

// optional .CommentDeleted commentDeleted = 9;
bool Message::has_commentdeleted() const {
  return body_case() == kCommentDeleted;
}
void Message::set_has_commentdeleted() {
  _oneof_case_[0] = kCommentDeleted;
}
void Message::clear_commentdeleted() {
  if (has_commentdeleted()) {
    delete body_.commentdeleted_;
    clear_has_body();
  }
}
 const ::CommentDeleted& Message::commentdeleted() const {
  // @@protoc_insertion_point(field_get:Message.commentDeleted)
  return has_commentdeleted()
      ? *body_.commentdeleted_
      : ::CommentDeleted::default_instance();
}
::CommentDeleted* Message::mutable_commentdeleted() {
  if (!has_commentdeleted()) {
    clear_body();
    set_has_commentdeleted();
    body_.commentdeleted_ = new ::CommentDeleted;
  }
  // @@protoc_insertion_point(field_mutable:Message.commentDeleted)
  return body_.commentdeleted_;
}
::CommentDeleted* Message::release_commentdeleted() {
  // @@protoc_insertion_point(field_release:Message.commentDeleted)
  if (has_commentdeleted()) {
    clear_has_body();
    ::CommentDeleted* temp = body_.commentdeleted_;
    body_.commentdeleted_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_commentdeleted(::CommentDeleted* commentdeleted) {
  clear_body();
  if (commentdeleted) {
    set_has_commentdeleted();
    body_.commentdeleted_ = commentdeleted;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.commentDeleted)
}

bool Message::has_body() const {
  return body_case() != BODY_NOT_SET;
}
void Message::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
Message::BodyCase Message::body_case() const {
  return Message::BodyCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommentAdded::kAddrFieldNumber;
const int CommentAdded::kCmtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommentAdded::CommentAdded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommentAdded)
}

void CommentAdded::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommentAdded::CommentAdded(const CommentAdded& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommentAdded)
}

void CommentAdded::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_ = GOOGLE_ULONGLONG(0);
  cmt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CommentAdded::~CommentAdded() {
  // @@protoc_insertion_point(destructor:CommentAdded)
  SharedDtor();
}

void CommentAdded::SharedDtor() {
  cmt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CommentAdded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommentAdded::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommentAdded_descriptor_;
}

const CommentAdded& CommentAdded::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2eproto();
  return *default_instance_;
}

CommentAdded* CommentAdded::default_instance_ = NULL;

CommentAdded* CommentAdded::New(::google::protobuf::Arena* arena) const {
  CommentAdded* n = new CommentAdded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommentAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:CommentAdded)
  addr_ = GOOGLE_ULONGLONG(0);
  cmt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CommentAdded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommentAdded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 addr = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cmt;
        break;
      }

      // optional string cmt = 2;
      case 2: {
        if (tag == 18) {
         parse_cmt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmt().data(), this->cmt().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CommentAdded.cmt"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommentAdded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommentAdded)
  return false;
#undef DO_
}

void CommentAdded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommentAdded)
  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr(), output);
  }

  // optional string cmt = 2;
  if (this->cmt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmt().data(), this->cmt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CommentAdded.cmt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmt(), output);
  }

  // @@protoc_insertion_point(serialize_end:CommentAdded)
}

::google::protobuf::uint8* CommentAdded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommentAdded)
  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr(), target);
  }

  // optional string cmt = 2;
  if (this->cmt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmt().data(), this->cmt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CommentAdded.cmt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CommentAdded)
  return target;
}

int CommentAdded::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CommentAdded)
  int total_size = 0;

  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());
  }

  // optional string cmt = 2;
  if (this->cmt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmt());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommentAdded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommentAdded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommentAdded* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommentAdded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommentAdded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommentAdded)
    MergeFrom(*source);
  }
}

void CommentAdded::MergeFrom(const CommentAdded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommentAdded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr() != 0) {
    set_addr(from.addr());
  }
  if (from.cmt().size() > 0) {

    cmt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmt_);
  }
}

void CommentAdded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommentAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommentAdded::CopyFrom(const CommentAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommentAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommentAdded::IsInitialized() const {

  return true;
}

void CommentAdded::Swap(CommentAdded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommentAdded::InternalSwap(CommentAdded* other) {
  std::swap(addr_, other->addr_);
  cmt_.Swap(&other->cmt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommentAdded::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommentAdded_descriptor_;
  metadata.reflection = CommentAdded_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommentAdded

// optional uint64 addr = 1;
void CommentAdded::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CommentAdded::addr() const {
  // @@protoc_insertion_point(field_get:CommentAdded.addr)
  return addr_;
}
 void CommentAdded::set_addr(::google::protobuf::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:CommentAdded.addr)
}

// optional string cmt = 2;
void CommentAdded::clear_cmt() {
  cmt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CommentAdded::cmt() const {
  // @@protoc_insertion_point(field_get:CommentAdded.cmt)
  return cmt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommentAdded::set_cmt(const ::std::string& value) {
  
  cmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommentAdded.cmt)
}
 void CommentAdded::set_cmt(const char* value) {
  
  cmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommentAdded.cmt)
}
 void CommentAdded::set_cmt(const char* value, size_t size) {
  
  cmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommentAdded.cmt)
}
 ::std::string* CommentAdded::mutable_cmt() {
  
  // @@protoc_insertion_point(field_mutable:CommentAdded.cmt)
  return cmt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommentAdded::release_cmt() {
  // @@protoc_insertion_point(field_release:CommentAdded.cmt)
  
  return cmt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommentAdded::set_allocated_cmt(::std::string* cmt) {
  if (cmt != NULL) {
    
  } else {
    
  }
  cmt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmt);
  // @@protoc_insertion_point(field_set_allocated:CommentAdded.cmt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommentDeleted::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommentDeleted::CommentDeleted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommentDeleted)
}

void CommentDeleted::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommentDeleted::CommentDeleted(const CommentDeleted& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommentDeleted)
}

void CommentDeleted::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  addr_ = GOOGLE_ULONGLONG(0);
}

CommentDeleted::~CommentDeleted() {
  // @@protoc_insertion_point(destructor:CommentDeleted)
  SharedDtor();
}

void CommentDeleted::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommentDeleted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommentDeleted::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommentDeleted_descriptor_;
}

const CommentDeleted& CommentDeleted::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2eproto();
  return *default_instance_;
}

CommentDeleted* CommentDeleted::default_instance_ = NULL;

CommentDeleted* CommentDeleted::New(::google::protobuf::Arena* arena) const {
  CommentDeleted* n = new CommentDeleted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommentDeleted::Clear() {
// @@protoc_insertion_point(message_clear_start:CommentDeleted)
  addr_ = GOOGLE_ULONGLONG(0);
}

bool CommentDeleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommentDeleted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 addr = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommentDeleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommentDeleted)
  return false;
#undef DO_
}

void CommentDeleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommentDeleted)
  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:CommentDeleted)
}

::google::protobuf::uint8* CommentDeleted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommentDeleted)
  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CommentDeleted)
  return target;
}

int CommentDeleted::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CommentDeleted)
  int total_size = 0;

  // optional uint64 addr = 1;
  if (this->addr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommentDeleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommentDeleted)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommentDeleted* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommentDeleted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommentDeleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommentDeleted)
    MergeFrom(*source);
  }
}

void CommentDeleted::MergeFrom(const CommentDeleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommentDeleted)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr() != 0) {
    set_addr(from.addr());
  }
}

void CommentDeleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommentDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommentDeleted::CopyFrom(const CommentDeleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommentDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommentDeleted::IsInitialized() const {

  return true;
}

void CommentDeleted::Swap(CommentDeleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommentDeleted::InternalSwap(CommentDeleted* other) {
  std::swap(addr_, other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommentDeleted::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommentDeleted_descriptor_;
  metadata.reflection = CommentDeleted_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommentDeleted

// optional uint64 addr = 1;
void CommentDeleted::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CommentDeleted::addr() const {
  // @@protoc_insertion_point(field_get:CommentDeleted.addr)
  return addr_;
}
 void CommentDeleted::set_addr(::google::protobuf::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:CommentDeleted.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
